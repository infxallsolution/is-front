{"version":3,"file":"static/js/548.c873c1bd.chunk.js","mappings":"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","sources":["components/shared-components/AppHeader/index.js","components/util-components/IntlMessage/index.js","services/AuthHeader.js","services/ClientService.js","services/ModuleService.js","components/app-components/modules/ModulesTable.js","components/app-components/modules/ModulesForm.js","views/app-views/admin/module/index.js"],"sourcesContent":["import { css } from '@emotion/react'\nimport { Breadcrumb } from 'antd'\nimport IntlMessage from 'components/util-components/IntlMessage'\nimport { MEDIA_QUERIES } from 'constants/ThemeConstant'\nimport React from 'react'\n\nconst AppHeader = ({ title, items }) => {\n  return (\n    <div\n      css={css`\n        align-items: center;\n        margin-bottom: 1rem;\n\n        @media ${MEDIA_QUERIES.LAPTOP_ABOVE} {\n          display: flex;\n        }\n      `}\n    >\n      <h3 className=\"mb-0 mr-3 font-weight-semibold\">\n        <IntlMessage id={title} />\n      </h3>\n      <Breadcrumb items={items} />\n    </div>\n  );\n};\n\nexport default AppHeader","import React from 'react';\nimport { useTranslation } from 'react-i18next'\n\nconst IntlMessage = ({ id, fallback }) => {\n\n\tconst { t } = useTranslation()\n\n\tconst translate = t(id, fallback)\n\n\treturn <>{translate}</>\n}\n\nexport default IntlMessage;\n","import { AUTH_TOKEN } from \"constants/AuthConstant\";\n\nconst authHeader = () => {\n  const jwtToken = localStorage.getItem(AUTH_TOKEN);\n\n  if (jwtToken) {\n    return {\n      Authorization: `Bearer ${jwtToken}`,\n      \"Content-type\": \"application/json\",\n    };\n  } else {\n    return {};\n  }\n};\n\n\nexport { authHeader };","import { env } from \"configs/EnvironmentConfig\";\nimport { authHeader } from \"./AuthHeader\";\n\nconst URL_BASE = env.API_ENDPOINT_URL;\n\nexport const ClientService = {\n  getAllClients: async () => {\n    const response = await fetch(`${URL_BASE}/client/list`, {\n      headers: authHeader(),\n    });\n    const data = await response.json();\n    return data;\n  },\n  getClient: async (id) => {\n    const response = await fetch(`${URL_BASE}/client/get/${id}`, {\n      headers: authHeader(),\n    });\n    const data = await response.json();\n    return data;\n  },\n  insertClient: async (data) => {\n    const response = await fetch(`${URL_BASE}/client/insert`, {\n      method: \"POST\",\n      headers: authHeader(),\n      body: JSON.stringify(data),\n    });\n    const responseData = await response.json();\n    return responseData;\n  },\n  updateClient: async (data, id) => {\n    const response = await fetch(`${URL_BASE}/client/update/${id}`, {\n      method: \"PUT\",\n      headers: authHeader(),\n      body: JSON.stringify(data),\n    });\n    const responseData = await response.json();\n    return responseData;\n  },\n  enableClient: async (id) => {\n    const response = await fetch(`${URL_BASE}/client/enableClient/${id}`, {\n      method: \"PUT\",\n      headers: authHeader(),\n    });\n    const data = await response.json();\n    return data;\n  },\n  disableClient: async (id) => {\n    const response = await fetch(`${URL_BASE}/client/disableclient/${id}`, {\n      method: \"DELETE\",\n      headers: authHeader(),\n    });\n    const data = await response.json();\n    return data;\n  },\n};\n\nexport default ClientService;\n","import { env } from \"configs/EnvironmentConfig\";\nimport { authHeader } from \"./AuthHeader\";\nconst ULR_BASE = env.API_ENDPOINT_URL;\n\nconst ModuleService = {\n  getAllModules: async () => {\n    const response = await fetch(`${ULR_BASE}/module/list`, {\n      headers: authHeader(),\n    });\n    const data = await  response.json();\n    return data;\n  },\n  getModule: async (id) => {\n    const response = await fetch(`${ULR_BASE}/module/get/${id}`, {\n      method: \"get\",\n      headers: authHeader(),\n    });\n    const data = await response.json();\n    return data;\n  },\n  getModuleByClient: async (id) => {\n    const response = await fetch(\n      `${ULR_BASE}/moduleclient/listbyclient?id=${id ? id : \" \"}`,\n      {\n        method: \"get\",\n        headers: authHeader(),\n      }\n    );\n    const data = await response.json()\n    return data;\n  },\n  getModuleActiveByClient: async (id) => {\n    const response = await fetch(\n      `${ULR_BASE}/moduleclient/activeModules?id=${id ? id : \" \"}`,\n      {\n        method: \"get\",\n        headers: authHeader(),\n      }\n    );\n    const data = await response.json()\n    return data;\n  },\n  insertModuleClient: async (data) => {\n    const response = await fetch(`${ULR_BASE}/moduleclient/insert`, {\n      method: \"post\",\n      headers: authHeader(),\n      body: JSON.stringify(data),\n    });\n    return response;\n  },\n  deleteModuleClient: async (data) => {\n    const response = await fetch(`${ULR_BASE}/moduleclient/delete`, {\n      method: \"delete\",\n      headers: authHeader(),\n      body: JSON.stringify(data),\n    });\n    return response;\n  }\n};\n\nexport default ModuleService;\n","import { Checkbox, Table, Tag } from \"antd\";\r\nimport React, { useEffect, useMemo, useState } from \"react\";\r\nimport ModuleService from \"services/ModuleService\";\r\n\r\nconst ModulesTable = ({ clientId }) => {\r\n\r\n  const [modules, setModules] = useState([])\r\n\r\n  useEffect(() => {\r\n    ModuleService.getModuleByClient(clientId).then((response) => {\r\n      setModules(\r\n        response.map((item) => {\r\n          /*item.module.name === \"logistic\"\r\n            ? (item.module.name = \"Logística\")\r\n            : (item.module.name =\r\n                item.module.name.charAt(0).toUpperCase() +\r\n                item.module.name.slice(1));\r\n          item.module.name === \"Reception\"\r\n            ? (item.module.name = \"Porteria\")\r\n            : (item.module.name =\r\n                item.module.name.charAt(0).toUpperCase() +\r\n                item.module.name.slice(1));*/\r\n          return {\r\n            id: item.id,\r\n            clientId: item.clientId,\r\n            moduleName: item.module.description,\r\n            moduleId: item.module.id,\r\n            moduleStatus: item.module.state,\r\n            checked: item.state,\r\n            status: item.state,\r\n          };\r\n        })\r\n      );\r\n    });\r\n  }, [clientId])\r\n  \r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        title: \"Nombre\",\r\n        dataIndex: \"moduleName\",\r\n        key: \"name\",\r\n      },\r\n      {\r\n        title: \"Modulo asociado\",\r\n        dataIndex: \"status\",\r\n        key: \"status\",\r\n        render: (status) => {\r\n          return status ? (\r\n            <Tag color=\"green\">Activo</Tag>\r\n          ) : (\r\n            <Tag color=\"red\">Inactivo</Tag>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        title: \"Acción\",\r\n        dataIndex: \"action\",\r\n        render: (__, data) => {\r\n          return (\r\n            <Checkbox\r\n              checked={data?.status}\r\n              onChange={() => {\r\n                if(data.status){\r\n                  ModuleService.deleteModuleClient({\r\n                    clientId: data.clientId,\r\n                    moduleId: data.moduleId,\r\n                    state: !data.status,\r\n                  }).then((response) => {\r\n                    setModules((prev) => {\r\n                      return prev.map((item) => {\r\n                        if (item.id === data.id) {\r\n                          return {\r\n                            ...item,\r\n                            status: !item.status,\r\n                          };\r\n                        }\r\n                        return item;\r\n                      });\r\n                    });\r\n                  })\r\n                }else{\r\n                  ModuleService.insertModuleClient({\r\n                    clientId: data.clientId,\r\n                    moduleId: data.moduleId,\r\n                    state: !data.status,\r\n                  }).then((response) => {\r\n                    setModules((prev) => {\r\n                      return prev.map((item) => {\r\n                        if (item.id === data.id) {\r\n                          return {\r\n                            ...item,\r\n                            status: !item.status,\r\n                          };\r\n                        }\r\n                        return item;\r\n                      });\r\n                    });\r\n                    \r\n                  });\r\n                }\r\n              }}\r\n            />\r\n          );\r\n        },\r\n      },\r\n    ],\r\n    [modules]\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Table\r\n        dataSource={modules}\r\n        columns={columns}\r\n        bordered\r\n        size=\"middle\"\r\n        pagination={false}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModulesTable;\r\n","import { Form, Select } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport ModulesTable from \"./ModulesTable\";\nimport ClientService from \"services/ClientService\";\nimport ModuleService from \"services/ModuleService\";\n\nconst ModulesForm = () => {\n  const [clients, setClients] = useState([]);\n  const [clientModule, setClientModule] = useState(\"\");\n  const [modules, setModules] = useState([]); // [1]\n  const { Option } = Select;\n\n  useEffect(() => {\n    ClientService.getAllClients().then((response) => {\n      setClients(response);\n    });\n  }, [clientModule]);\n\n  const onChange = (value) => {\n    setClientModule(value)\n  }\n\n  const [form] = Form.useForm();\n\n  return (\n    <div>\n      <Form\n        form={form}\n        size=\"middle\"\n        labelCol={{ span: 6 }}\n        wrapperCol={{ span: 16 }}\n        style={{\n          marginLeft: \"20%\",\n        }}\n      >\n        <Form.Item>\n          <Select placeholder={\"Seleccione un cliente\"} onChange={onChange}>\n            {clients.map((client, index) => {\n              return (\n                <Option key={index} value={client.id}>\n                  {client.name}\n                </Option>\n              );\n            })}\n          </Select>\n        </Form.Item>\n        <Form.Item>\n          <ModulesTable clientId={clientModule} />\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nexport default ModulesForm;\n","import { Card } from 'antd';\nimport ModulesForm from 'components/app-components/modules/ModulesForm';\nimport AppHeader from 'components/shared-components/AppHeader'\nimport React from 'react'\n\nconst Modules = () => {\n  return (\n    <>\n      <AppHeader\n        title={\"Módulos\"}\n        items={[\n          { title: \"Home\", path: \"/\" },\n          { title: \"Administracion\" },\n          { title: \"Módulos\" },\n        ]}\n      />\n      <Card>\n        <ModulesForm />\n      </Card>\n    </>\n  );\n};\n\nexport default Modules\n"],"names":["title","items","css","MEDIA_QUERIES","className","id","fallback","translate","t","useTranslation","authHeader","jwtToken","localStorage","getItem","AUTH_TOKEN","Authorization","URL_BASE","env","ClientService","getAllClients","fetch","headers","response","json","data","getClient","insertClient","method","body","JSON","stringify","responseData","updateClient","enableClient","disableClient","ULR_BASE","ModuleService","getAllModules","getModule","getModuleByClient","getModuleActiveByClient","insertModuleClient","deleteModuleClient","clientId","useState","modules","setModules","useEffect","then","map","item","moduleName","module","description","moduleId","moduleStatus","state","checked","status","columns","useMemo","dataIndex","key","render","color","__","onChange","prev","dataSource","bordered","size","pagination","clients","setClients","clientModule","setClientModule","Option","Select","Form","form","labelCol","span","wrapperCol","style","marginLeft","placeholder","value","client","index","name","AppHeader","path"],"sourceRoot":""}